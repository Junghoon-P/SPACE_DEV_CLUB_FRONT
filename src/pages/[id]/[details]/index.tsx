import { NextPage } from "next";
import styled from "@emotion/styled";
import Head from "next/head";

import { DetailHeader } from "../../../components/Details/DetailHeader";
import { LeftHeader } from "../../../components/Details/LeftHeader";
import { RightHeader } from "../../../components/Details/RightHeader";

import { DetailCard } from "../../../components/Details/DetailCard";
import { Header } from "../../../components/Common/Header";

import { Theme } from "../../../styles/theme";
import { useContext, useEffect, useState } from "react";
import { ThemeContext } from "../../_app";
import { useRouter } from "next/router";
import { useData } from "../../../hooks/useData";
import { ErrorPage } from "../../../components/Details/ErrorPage";

interface ThemeProps {
  theme: Theme;
}

interface User {
  id: number;
  username: string;
  email: string;
  provider: string;
  confirmed: boolean;
  blocked: boolean;
  createdAt: string;
  updatedAt: string;
}

interface Post {
  id: number;
  attributes: {
    userid: number;
    title: string;
    contents: string;
    published: boolean;
    createdAt: string;
    updatedAt: string;
    publishedAt: string;
    url: string;
    private: null;
  };
}

const DetailsIndexPage: NextPage = () => {
  const { theme } = useContext(ThemeContext);
  const router = useRouter();
  const userName = router.query.id;
  const userDetails = router.query.details;
  let userId = 0;
  let postObj = {
    userid: 0,
    title: "",
    contents: "",
    published: false,
    createdAt: "",
    updatedAt: "",
    publishedAt: "",
    url: "",
    private: null,
  };
  const { data: userData, error: userError } = useData("users");
  const { data: postData, error: postError } = useData("posts");

  if (!userData || !postData) return <div>로딩중</div>;
  if (userError || postError) return <div>상세 페이지 에러</div>;

  userData.some((user: User) => {
    if (user.username === userName) {
      userId = user.id;
      return true;
    }
  });
  postData.data.some((post: Post) => {
    if (
      userId === post.attributes.userid &&
      post.attributes.url === userDetails
    ) {
      postObj = post.attributes;
      return true;
    }
  });

  return (
    <main>
      <Head>
        <title>Space Dev Club</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {postObj.title ? (
        <div>
          <Header username={"deli-ght"} user={true} />
          <DetailContainer>
            <LeftHeader />
            <DetailHeader
              title={postObj.title}
              contents={postObj.contents}
              userName={userName}
            />
            <RightHeader />
          </DetailContainer>
          <PostsContainer theme={theme}>
            <DetailCard />
          </PostsContainer>
        </div>
      ) : (
        <ErrorPage />
      )}
    </main>
  );
};

export default DetailsIndexPage;

const DetailContainer = styled.section`
  position: relative;
  display: flex;
  width: 100%;
  justify-content: center;
`;

const PostsContainer = styled.div<ThemeProps>`
  width: 100%;
  display: flex;
  justify-content: center;
  background-color: ${({ theme }) => theme.BACKGROUND};
  box-shadow: rgb(0 0 0 / 8%) 0px 0px 32px;
  margin-top: 50px;
`;
